//
// board.cpp for bomberman in /home/girard_r/rendu/cpp_bomberman
//
// Made by Aurélien GIRARDEAU
// Login   <girard_r@epitech.net>
//
// Started on  Tue May 19 16:16:47 2015 Aurélien GIRARDEAU
// Last update Fri May 29 15:40:47 2015 Aurélien GIRARDEAU
//

#include "Board.hh"

Board::Board(float sizeX, float sizeY)
  : AObj(BOARD), _sizeX(sizeX - 1), _sizeY(sizeY - 1)
{
}

Board::~Board()
{
}

bool		Board::initialize()
{
  if (_texture.load("./libgdl/assets/marvin.fbm/kt_rot_2.tga") == false)
    {
      throw BombermanError::ModelLoadFailure("Cannot load the bomb model\n");
      return (false);
    }
  _geometry.pushVertex(glm::vec3(-0.5, -0.5, -0.5));
  _geometry.pushVertex(glm::vec3(_sizeX + 0.5, -0.5, -0.5));
  _geometry.pushVertex(glm::vec3(_sizeX + 0.5, -0.5, _sizeY + 0.5));
  _geometry.pushVertex(glm::vec3(-0.5, -0.5, _sizeY + 0.5));
  _geometry.pushUv(glm::vec2(0.0f, 0.0f));
  _geometry.pushUv(glm::vec2(_sizeX, 0.0f));
  _geometry.pushUv(glm::vec2(_sizeX, _sizeY));
  _geometry.pushUv(glm::vec2(0.0f, _sizeY));
  _geometry.build();
  return (true);
}

void		Board::update(gdl::Clock const&, gdl::Input&)
{
}

void		Board::draw(gdl::AShader& shader, gdl::Clock const&)
{
  _texture.bind();
  glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_MIRRORED_REPEAT);
  glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_MIRRORED_REPEAT);
  _geometry.draw(shader, getTransformation(), GL_QUADS);
}
